TYPES OF services
==============================================
	ClustorIP
	NodePort
		ClustorIP + Port Forward
	Load Balancer
		NodePort + ClustorIP + Port Forward

Workstation
13.232.49.59
============================

Verification
=======================
13.233.120.69


kubectl create service clusterip my-cs --tcp=5678:80

 1014  kubectl get svc
 1015  kubectl get svc -n=rajesh
 1016  kubectl create svc -h
 1017  kubectl create svc clusterip -h
 1018  clear
 1019  kubectl create service clusterip my-cs --tcp=5678:80 -n=rajesh
 1020  kubectl get svc -n=rajesh
 1021  ping 10.110.88.243
 1022  clear
 1023  ls
 1024  kubectl get svc -n=rajesh
 1025  kubectl describe svc my-cs -n=rajesh
 1026  kubectl get pods -n=rajesh
 1027  kubectl get pods -n=rajesh -o wide
 1028  curl http://10.36.0.82
 1029  kubectl get pods -n=rajesh -o wide --showlabels
 1030  clear
 1031  kubectl get pods -n=rajesh -o wide --showlabels
 1032  kubectl get pods -n=rajesh -o wide --showlables
 1033  kubectl get pods -n=rajesh -o wide --show-labels
 1034  kubectl describe svc my-cs -n=rajesh
 1035  kubectl edit pod hello-pod -n=rajesh
 1036  kubectl describe svc my-cs -n=rajesh
 1037  curl http://10.110.88.243:5678
 1038  ls
 1039  vi pod.yaml
 1040  cp pod.yaml pod1.yaml
 1041  vi pod1.yaml
 1042  cp pod.yaml pod2.yaml
 1043  vi pod2.yaml
 1044  kubeclt create -f pod2.yaml -n=rajesh
 1045  kubectl create -f pod2.yaml -n=rajesh
 1046  vi pod2.yaml
 1047  vi pod1.yaml
 1048  kubeclt create -f pod2.yaml -n=rajesh
 1049  kubectl create -f pod2.yaml -n=rajesh
 1050  kubectl create -f pod1.yaml -n=rajesh
 1051  clear
 1052  kubectl get pod -n=rajesh
 1053  kubectl get pod -n=rajesh -o wide --show-labesl
 1054  kubectl get pod -n=rajesh -o wide --show-labels
 1055  kubectl describe svc my-cs -n=rajesh
 1056  kubectl edit svc my-cs -n=rajesh
 1057  kubectl describe svc my-cs -n=rajesh
 1058  kubectl edit svc my-cs -n=rajesh
 1059  kubectl describe svc my-cs -n=rajesh
 1060  kubectl get pod -n=rajesh -o wide --show-labels
 1061  ping             app=webserver2
 1062  Annotati
===============================
Node				POD
sdsds				http://10.110.88.243:5678/

kubectl create service nodeport my-nodeportsvc --tcp=5678:80






 1072  clear
 1073  kubectl create service nodeport my-nodeportsvc --tcp=5678:80 -n=rajesh
 1074  kubectl describe svc my-cs -n=rajesh
 1075  kubectl get svc -n=rajesh
 1076  kubectl describe svc my-nodeportsvc -n=rajesh
 1077  clear
 1078  ifconfig
 1079  kubectl describe svc my-nodeportsvc -n=rajesh
 1080  kubectl get svc -n=rajesh
 1081  kubectl describe svc my-nodeportsvc -n=rajesh -
 1082  kubectl describe svc my-nodeportsvc -n=rajesh
 1083  kubectl get pods -n=rajesh --show-labels
 1084  kubectl edit svc my-nodeportsvc -n=rajesh
 1085  kubectl get pods -n=rajesh --show-labels
 1086  kubectl describe svc my-nodeportsvc -n=rajesh
 1087  kubectl edit svc my-nodeportsvc -n=rajesh
 1088  kubectl describe svc my-nodeportsvc -n=rajesh
 1089  kubectl get pods -n=rajesh --show-labels





kubectl create service loadbalancer my-lbs --tcp=5678:80 -n=rajesh

https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/

https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
=========================================================
=========================================================


hostpath
https://www.devopsschool.com/blog/persistentvolume-persistentvolumeclaim-volumes-using-hostpath/

PV --> PVC --> Into POD --> Into Container.


kind: PersistentVolume
apiVersion: v1
metadata:
  name: hostpath
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/devopsschool"

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvchostpath1
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi




kind: Pod
apiVersion: v1
metadata:
  name: task-pv-pod
spec:
  containers:
    - name: task-pv-container
      image: scmgalaxy/nginx-devopsschoolv1
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: task-pv-storage
  volumes:
    - name: task-pv-storage
      persistentVolumeClaim:
        claimName: pvchostpath

kind: Pod
apiVersion: v1
metadata:
  name: task-pv-pod
spec:
  containers:
    - name: task-pv-container
      image: scmgalaxy/nginx-devopsschoolv1
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: task-pv-storage
  volumes:
    - name: task-pv-storage
      persistentVolumeClaim:
        claimName: pvchostpath1

nfs
https://www.devopsschool.com/blog/kubernetes-persistentvolume-and-persistentvolumeclaim-using-nfs-volume-types/

configmap vs secret
https://www.devopsschool.com/blog/kubernetes-configmap-explained-using-example/









 1002  kubectl get pv
 1003  kubectl get pvc
 1004  kubectl
 1005  kubectl api-resources
 1006  clear
 1007  ls
 1008  cd rajesh/
 1009  ls
 1010  vi pv.yaml
 1011  kubectl create -f pv.yaml
 1012  kubectl get pvc
 1013  kubectl get pv
 1014  ls /tmp/devopsschool
 1015  df -kh
 1016  clear
 1017  ls
 1018  kubectl get pv
 1019  ls
 1020  vi pv.yaml
 1021  kubectl create -f pv.yaml
 1022  kubectl get pv
 1023  vi pvc.yaml
 1024  kubectl create -f pvc.yaml -n=rajesh
 1025  kubectl get pvc
 1026  kubectl get pvc -n=rajesh
 1027  clear
 1028  ls
 1029  vi pvc1.yaml
 1030  kubectl create -f pvc1.yaml -n=rajesh
 1031  kubectl get pvc -n=rajesh
 1032  kubectl get pv
 1033  clear
 1034  ks
 1035  ls
 1036  vi podpvc.yaml
 1037  kubectl create -f podpvc.yaml -n=rajesh
 1038  kubectl get pods -o wide -n=rajesh
 1039  kubectl exec -it task-pv-pod /bin/bash -n=rajesh
 1040  ls
 1041  kubectl delete -f podpvc.yaml -n=rajesh
 1042  kubectl create -f podpvc.yaml -n=rajesh
 1043  kubectl get pods -o wide -n=rajesh
 1044  kubectl exec -it task-pv-pod /bin/bash -n=rajesh

How to setup monitoring infra
===================================================================
Container ---> Cadvisor
Pod - Heapster
Node - Promethus
Logs - Elastic Search

-------------------
GUI - Alert - Reporting - Dashboard
--------------------------------------
	- Kibana
	- Grapana

Registry
MS policy
Auto discover
==============================
==============================
HELM
==============================

 1052  wget https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz
 1053  yum install wget -y
 1054  sudo yum install wget -y
 1055  clear
 1056  wget https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz
 1057  ls
 1058  tar -zxvf helm-v3.2.1-linux-amd64.tar.gz
 1059  clear
 1060  ls
 1061  cd linux-amd64
 1062  ls
 1063  ./helm
 1064  clear
 1065  helm install stable/tomcat --version 0.4.1
 1066  echo $PATH
 1067  cp helm /usr/local/bin
 1068  sudo cp helm /usr/local/bin
 1069  helm install stable/tomcat --version 0.4.1
 1070  helm install stable/tomcat --version 0.4.1  --generate-name
 1071  helm repo update
 1072  helm repo add stable https://kubernetes-charts.storage.googleapis.com
 1073  helm install stable/tomcat --version 0.4.1
 1074  helm install stable/tomcat --version 0.4.1 --generate-name
 1075  kubectl get svc
 1076  kubectl get pods
 1077  helm
 1078  helm list
 1079  helm uninstall tomcat-1590746611
 1080  helm list
 1081  kbectl get pod
 1082  kubectl get pods
 1083  clear
 1084  ls
 1085  cd ..
 1086  ls
 1087  cd rajesh/
 1088  ls
 1089  clear
 1090  ls
 1091  helm
 1092  clear
 1093  helm create web
 1094  ks
 1095  ls
 1096  cd web/
 1097  clear
 1098  tree
 1099  yum install teree -y
 1100  clear
 1101  sudo yum install tree -y
 1102  clear
 1103  tree
 1104  ls
 1105  helm
 1106  helm show
 1107  helm show all
 1108  helm show chart
 1109  helm show chart -h
 1110  helm show chart stable/tomcat
 1111  cd
 1112  ls
 1113  ls -la
 1114  cd .cache
 1115  ls
 1116  cd helm/
 1117  ls
 1118  cd repository/
 1119  slc
 1120  clear
 1121  ls
 1122  tar -zxvf tomcat-0.4.1.tgz
 1123  ls
 1124  cd tomcat/
 1125  clear
 1126  tree
 1127  more values.yaml
 1128  clclear
 1129  clear
 1130  grep -R "externalPort" .




helm repo add stable https://kubernetes-charts.storage.googleapis.com

helm install stable/tomcat --version 0.4.1


RBAC
==============================
==============================
Authentication and Authrization

Authentication - How to get inside a system?
- cert
Authorization - What you are eligible in the system?
- rbac


Types of User
--------------------
normal user - like us
service account - inter pod communication and auth.

Type of role
- role			- Scope Namespace
- clustorole		- Scope Clusor 

Type of Binding
rolebinding
clustorolebinding
=====================================
kubectl create sa tecnotree-sa
kubectl get sa -A | grep tec


=============================================================================
=============================================================================
QA
=============================================================================
Authentication and Authorization with K8s.

Authentication
    Certificates

Authorization
    ABAC
    RBAC - Certificates to Authenticate
           Roles to Authorize
================================================
TYPES of USERS
    - NORMAL USERS - 
          using certificates    
          This use has no api resources 
          For humen interaction with API Server         
    - SERVICE ACCOUNT 
          - Secret Tokens
          - This can be created using api resources
          - For KUBERNETES Control plane internal authentication and Auth.

Types of roles on RBAC?
    - Roles
        - Limited to Namespace
        - Humen
        - rules
    - clusterroles
        - Scope to ClustorWIde.
        - Clustor Releated Access.\
            - Can add humen.
        - rules
            apiGroups
            resourceNames
            resources
            verbs
               - create
                - get
                - delete
                - list
                - update
                - edit
                - watch
                - exec


Demo 1 - 
          Create a SERVice ACCOUNT    == ServiceAccount

          Create clusterroles         == ClusterRole
          Add SERVice ACCOUNT into clusterroles = ClusterRoleBinding

kubectl create sa tecnotree-sa
kubectl get sa -A | grep tec

sa.yaml
---------------
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tecnotree-admin

kubectl create -f sa.yaml
kubectl get sa -A | grep tec
kubectl get secrets





kubectl help create clusterrole
kubectl create clusterrole tecnotree-clusterroles1 --verb=get,list,watch --resource=pods
kubectl get clusterrole
kubectl describe clusterrole tecnotree-clusterroles1

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: tecnotree-clusterroles2
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "replicasets", "pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"] # You can also use ["*"]



kubectl create clusterrolebinding tecnotree-cr-binding --clusterrole=tecnotree-clusterroles2 --user=tecnotree-admin
kubectl get clusterrolebinding
kubectl get clusterrolebinding | grep tec

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tecnotree-cr-binding3
subjects:
- kind: ServiceAccount
  name: tecnotree-admin
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: tecnotree-clusterroles2
  apiGroup: rbac.authorization.k8s.io

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tecnotree-cr-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tecnotree-clusterroles2
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: tecnotree-admin


=========================
kubectl convert -f pod.yaml
kubectl convert -f pod.yaml --local -o json
kubectl convert -f . | kubectl create -f -


--------------------------------
subjects:
- kind: User
  name: example-user
  apiGroup: rbac.authorization.k8s.io

subjects.kinds CAN BE 
          User
          Group
          ServiceAccount

Demo 2 
          Create a normal Account - NA
          Create a roles = Role
          Add Normal ACCOUNT into roles = RoleBinding


      
======USER At LAPTOP==================
kubectl create namespace office

openssl genrsa -out employee.key 2048

openssl req -new -key employee.key -out employee.csr -subj "/CN=employee/O=bitnami"

======ADMIN AT MASTER using root==================
openssl x509 -req -in employee.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out /home/ec2-user/tecnotree/employee.crt -days 500

======USER At LAPTOP==================
kubectl config set-credentials employee --client-certificate=/home/ec2-user/tecnotree/employee.crt  --client-key=/home/ec2-user/tecnotree/employee.key

kubectl config set-context employee-context --cluster=kubernetes --namespace=office --user=employee

kubectl --context=employee-context get pods

==========================================
kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: office
  name: deployment-manager
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments", "replicasets", "pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"] # You can also use ["*"]

==================================
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: deployment-manager-binding
  namespace: office
subjects:
- kind: User
  name: employee
  apiGroup: ""
roleRef:
  kind: Role
  name: deployment-manager
  apiGroup: ""

============================
$ kubectl --context=employee-context run nginx --image=nginx
$ kubectl --context=employee-context get pods


==============================================================================
Notes- DONE


Slides - https://www.devopsschool.com/slides/
PDF - https://www.devopsschool.com/pdf/
Tutorials - https://www.devopsschool.com/tutorial/
Blogs - https://www.devopsschool.com/blog/
Videos
	- https://www.devopsschool.com/video/
	- https://www.devopsschool.com/videos/
	- https://www.youtube.com/TheDevOpsSchool
Certification Dump and Quiz
	https://www.devopsschool.com/lms/


How to connect with me?
http://rajeshkumar.xyz/


How to get training cerificates?
- https://www.devopscertification.co/













