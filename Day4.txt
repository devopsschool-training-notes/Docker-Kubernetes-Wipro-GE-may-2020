WORKSTAtiON -  13.127.16.233
ec2-user

# DO NT DO SUDO 



Namespace
POD
RC
Deployment
======================

  22  kubectl get nodes
   23  watch kubeget nodes
   24  watch kubectl nodes
   25  watch kubectl get nodes
   26  clear
   27  kubectl
   28  clear
   29  kubectl
   30  clear
   31  kubectl
   32  clear
   33  kubectl cluster-info
   34  kubectl
   35  kubectl config
   36  kubectl config view
   37  kubectl config set-cluster ?
   38  kubectl config set-cluster -h
   39  clear
   40  kubectl
   41  kubectl api-resources
   42  kubectl api-resources | wc -l
   43  clear
   44  kubectl
   45  kubectl api-versions
   46  kubectl api-resources
   47  kubectl api-versions
   48  kubectl api-resources
   49  clear
====================================================================
C R U D

Create Read Update Delete

Create 
	CMD
		create
	YAML
		create
Read 
	CMD
		get
		describe 
	YAML
		get
Update 
	CMD
		edit
	YAML
		edit
		apply
Delete
	CMD
		delete
	YAML
		delete
===========================================
Namespace


 56  kubectl api-resources
   57  clear
   58  kubectl create -h
   59  kubectl create namespace -h
   60  clear
   61  kubectl get ns
   62  kubectl create ns dev
   63  kubectl create ns rajesh
   64  kubectl get ns
   65  kubectl edit ns dev
   66  kubectl delete ns dev
   67  kubectl get ns
   68  clear
   69  kubectl get ns
   70  kubectl describe ns rajesh
   71  history

POD
=======================
	Container -> Image 
		- port
		- env

		
apiVersion: v1
kind: Pod
metadata:
  name: hello-pod
  labels: 
    app: webserver
spec:
  containers:
  - name: hello-ctr
    image: nginx
    ports:
    - containerPort: 80

----------------------------
                 node.kubernetes.io/unreachable:NoExecute for 300s
Events:
  Type     Reason            Age                From               Message
  ----     ------            ----               ----               -------
  Warning  FailedScheduling  30s (x2 over 30s)  default-scheduler  0/2 nodes are available: 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate, 1 node(s) had taint {node.kubernetes.io/unreachable: }, that the pod didn't tolerate.
[ec2-user@ip-172-31-9-227 rajesh]$ kubectl get pod

=========================
E0528 04:51:50.803272    1774 summary_sys_containers.go:47] Failed to get system container stats for "/user.slice/user-1000.slice/session-1.scope": failed to get cgroup stats for "/user.slice/user-1000.slice/session-1.scope": failed to get container info for "/user.slice/user-1000.slice/session-1.scope": unknown container "/user.slice/user-1000.slice/session-1.scope"
I0528 04:52:00.803556    1774 kubelet_node_status.go:294] Setting node annotation to enable volume controller attach/detach
E0528 04:52:00.837275    1774 summary_sys_containers.go:47] Failed to get system container stats for "/user.slice/user-1000.slice/session-1.scope": failed to get cgroup stats for "/user.slice/user-1000.slice/session-1.scope": failed to get container info for "/user.slice/user-1000.slice/session-1.scope": unknown container "/user.slice/user-1000.slice/session-1.scope"

  92  vi pod.yaml
   93  kubectl create -f pod.yaml
   94  kubectl get pod
   95  kubectl describe pod hello-pod
   96  kubectl get pod
   97  kubectl get nodes
   98  clear
   99  kubectl get pods
  100  kubectl describe pod hello-pod
  101  kubectl get pods
  102  kubectl describe pod hello-pod
  103  clear
  104  ls
  105  kubectl get pids
  106  kubectl get pods
  107  kubectl describe pods hello-pod
  108  clea
  109  cleAR
  110  LS
  111  clear
  112  ls
  113  clear
  114  kubectl get pods
  115  kubectl edit pod hello-pod
  116  kubectl get pods
  117  kubectl get pods -o wide
  118  kubectl get pods -o wide --show-labels
  119  vi pod.yaml
  120  kubectl apply -f pod.yaml
  121  kubectl get pods -o wide --show-labels
  122  clear
  123  ls
  124  kubectl create -f pod.yaml
  125  kubectl get pods
  126  kubectl get ns
  127  kubectl create -f pod.yaml -n=rajesh
  128  kubectl get ns
  129  kubectl get pods
  130  kubectl get pods -n=rajesh
  131  kubectl get ns
  132  kubectl get pods --all-namespaces
  133  watch kubectl get pods --all-namespaces
  134  clear
  135  ls
  136  kubectl get pods
  137  kubectl get ns
  138  kubectl get pods -n=kube-system
==========================================================
How to use PODS?
- logs
- attach
- exec
- cp

 178  vi jenkins.yaml
  179  kubectl create -f jenkins.yaml -n=rajesh
  180  kubectl get pods -n=rajesh
  181  kubectl get logs jenkins -n=rajesh
  182  kubectl logs jenkins -n=rajesh
  183  clear
  184  kubectl exec -it  jenkins /bin/bash -n=rajesh
  185  kubectl attach jenkins -n=rajesh
  186* kubectl g
  187  clear
  188  ls
  189  kubectl get pods -n=rajesh
  190  ls
  191  kubectl cp -h
  192  kubectl get pods -n=rajesh
  193  ls
  194  clear
  195  ls
  196  kubectl cp *.yaml jenkins:/tmp/ -n=rajesh
  197  kubectl cp pod.yaml  jenkins:/tmp/ -n=rajesh
  198  kubectl exec jenkins ls /tmp -n=rajesh




apiVersion: v1
kind: Pod
metadata:
  name: jenkins
  labels:
    app: webserver1
spec:
  containers:
  - name: jenkins
    image: jenkins
    ports:
    - containerPort: 8080


- 
How to learn a field of YAML for each resources????

 203  kubectl explain
  204  kubectl api-resources
  205  kubectl explain pods
  206  kubectl explain pods.spec
  207  kubectl explain pods.spec.containers
  208  kubectl explain namespace
  209  kubectl explain namespace.spec
  210  kubectl explain namespace
  211  kubectl explain namespace.metadata

13.233.137.191
kubeadm join 172.31.9.227:6443 --token g6ukaf.52kdveu31g1x8mb1 \
    --discovery-token-ca-cert-hash sha256:528f0e13d7279e8a59ef19d570050302b3ba1b                4849782aecaf9fbc496fb4b458
======================================================
Replication Controller
=============================
Replication - 1 to many
Controller - Actual to Desire
================================

apiVersion: v1
kind: ReplicationController
metadata:
  name: hello-rc
spec:
  replicas: 2   
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-ctr
        image: scmgalaxy/nginx-devopsschoolv1
        ports:
        - containerPort: 80

 1010  clear
 1011  kubectl explain rc
 1012  kubectl explain rc.spec
 1013  kubectl explain rc.spec.spec.
 1014  kubectl explain rc.spec.spec
 1015  kubectl explain rc.spec.templae.spec
 1016  kubectl explain rc.spec.template.spec
 1017  clear
 1018  ls
 1019  vi rc.yaml
 1020  ls
 1021  kubectl create -f rc.yaml -n=rajesh
 1022  kubectl get rc -n=rajesh
 1023  kubectl get pod -n=rajesh
 1024  kubectl edit rc hello-rc -n=rajesh
 1025  kubectl get pod -n=rajesh
 1026  clear
 1027  ls
 1028  vi rc.yaml
 1029  kubectl create -f rc.yaml -n=rajesh
 1030  kubectl apply -f rc.yaml -n=rajesh
 1031  kubectl get pod -n=rajesh
 1032  kubectl
 1033  kubectl scale -h
 1034  clear
 1035  kubectl scale -h
 1036  kubectl scale --replicas=10 -f rc.yaml -n=rajesh
 1037  kubectl get pod -n=rajesh
 1038  clear
 1039  kubectl get pod -n=rajesh
 1040  kubectl scale --replicas=100\ -f rc.yaml -n=rajesh
 1041  kubectl scale --replicas=100 -f rc.yaml -n=rajesh
 1042  kubectl get pod -n=rajesh
 1043  kubectl get nodes
 1044  kubectl get pod -n=rajesh
 1045  watch kubectl get pod -n=rajesh
 1046  kubectl get pod -n=rajesh
 1047  clear
 1048  kubectl scale --replicas=2 -f rc.yaml -n=rajesh
 1049  kubectl get pod -n=rajesh
 1050  watch kubectl get pod -n=rajesh
 1051  clear
 1052  kubectl get pod -n=rajesh
 1053  kubectl delete pod hello-rc-8nvnw -n=rajesh
 1054  kubectl get pod -n=rajesh
 1055  history














